---
layout:      post
title:       "Asynchronous elasticsearch bindings"
date:        2019-01-15 16:55:01 -0000
categories:  Python, ElasticSearch
tag:         post
start-date:  2018-09-05
end-date:    2019-01-24
author:      Mikhail Molotkov
---

In my main work project it was required to build an API which can get data from ElasticSearch.
So, my initial approach was to use awesome [package][dsl-link], that allows to work with ES from your Python code in a clean & nice way.

However, later on I reallised this package does not support asyncronous calls to ElasticSearch and my project could not co-op with incoming load.

So I started to look into how we can use async approach and I found a [package][async-link] which enables async calls to ES.

**BUT**
1. This package doesn't have nice wrappers around calls and ES responses as in [dsl][dsl-link] package and 
2. Initial dsl package was already higly integrated into the code
and thus I decided to write my own module, which apparently an update for the code from dsl package, but with the use of async ES client. 

As a result, it gave us a significant improvement - now we can handle 3 times more request than with default dsl package.


[GitHub Link][link-to]

[link-to]:    https://github.com/MikhailMS/elasticsearch-async-dsl-binds
[dsl-link]:   https://github.com/elastic/elasticsearch-dsl-py
[async-link]: https://github.com/elastic/elasticsearch-py-async
